version: "3.0"

networks:
  front-tier:
  back-tier:
  traefik:
    external: true
  dockerVLAN:
    name: dockerVLAN
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "192.168.0.0/24"
          ip_range: "192.168.0.252/30"
          gateway: "192.168.0.1"

services:

  plex:
    image: plexinc/pms-docker
    networks:
      - front-tier
      - traefik
    environment:
      - TZ=Europe/Berlin
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - /docker/appconf/plex:/config
      - /mnt/Media/Plex/media:/data/media
    ports:
      - 32400:32400/tcp
      - 1900:1900/udp
      - 3005:3005
      - 5353:5353
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.rule=Host(`plex.snipermonkey.de`)"
      - "traefik.http.routers.plex.entrypoints=web"
      - "traefik.http.routers.plex.tls=true"
    restart: unless-stopped
    profiles:
      - donotstart

  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    volumes:
      - ./jellyfin/config:/config
      - /mnt/Media/Plex/media:/data/media:ro
    networks:
        traefik:
        dockerVLAN:
          ipv4_address: 192.168.0.253
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - JELLYFIN_PublishedServerUrl=https://jellyfin.snipermonkey.de
    ports:
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.snipermonkey.de`)"
      - "traefik.http.routers.jellyfin.entrypoints=web"
      - "traefik.http.routers.jellyfin.tls=true"
    restart: "unless-stopped"

  sonarr:
    image: lscr.io/linuxserver/sonarr
    networks:
      - back-tier
      - front-tier
      - traefik
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /docker/appconf/sonarr:/config
      - /mnt/Media/Plex:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.snipermonkey.de`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.middlewares=restricted-access@file"
    restart: unless-stopped

  nzbget:
    image: lscr.io/linuxserver/nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /docker/appconf/nzbget:/config
      - /mnt/Media/Plex/usenet:/data/usenet
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.snipermonkey.de`)"
      - "traefik.http.routers.nzbget.entrypoints=web"
      - "traefik.http.routers.nzbget.tls=true"
      - "traefik.http.routers.nzbget.middlewares=restricted-access@file"
    restart: unless-stopped
    networks:
      - back-tier
      - traefik

  radarr:
    image: lscr.io/linuxserver/radarr
    networks:
      - back-tier
      - traefik
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /docker/appconf/radarr:/config
      - /mnt/Media/Plex:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.rule=Host(`radarr.snipermonkey.de`)"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.middlewares=restricted-access@file"
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.qbit.loadbalancer.server.port=8080"
      - "traefik.http.routers.qbit.rule=Host(`qbit.snipermonkey.de`)"
      - "traefik.http.routers.qbit.entrypoints=web"
      - "traefik.http.routers.qbit.tls=true"
      - "traefik.http.routers.qbit.service=qbit"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.jackett.rule=Host(`jackett.snipermonkey.de`)"
      - "traefik.http.routers.jackett.entrypoints=web"
      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.service=jackett"
    #environment:
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - AUTO_UPDATE=true #optional
    volumes:
      - ./jackett:/config
      - /dev/null:/downloads
    network_mode: "service:gluetun"
    restart: unless-stopped
    depends_on:
      - gluetun

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - WEBUI_PORT=8080
    volumes:
      - /docker/appconf/qbit:/config
      - /mnt/Media/Plex/torrent:/data/torrent
    #ports:
    #  - 8080:8080
    #  - 6881:6881
    #  - 6881:6881/udp
    network_mode: "service:gluetun"
    restart: unless-stopped
    depends_on:
      - gluetun